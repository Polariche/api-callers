apiVersion: keys.qouriers.io/v1
kind: Keyspace
metadata:
    name: lostark
    namespace: qouriers
spec:
    default-limit-rate:
      '60': '100'
    inject-key:
      http-headers:
        authorization: 'bearer {key}'
---
apiVersion: queries.qouriers.io/v1
kind: APIQuery
metadata:
    name: max-item-level
    namespace: qouriers
    labels:
      keys.qouriers.io/keyspace: lostark
spec:
    url: https://developer-lostark.game.onstove.com/characters/{characterName}/siblings
    method: GET
    result:
      json:
        serverName: first($[?(@.CharacterName=="{characterName}")].ServerName)
        maxLevel: max($[?(@.ServerName=="{serverName}")].ItemMaxLevel)
        maxLevelCharacterName: first($[?(@.ItemMaxLevel=="{maxLevel}")].CharacterName)

---
apiVersion: queries.qouriers.io/v1
kind: APIQuery
metadata:
    name: expedition-level
    namespace: qouriers
    labels:
      keys.qouriers.io/keyspace: lostark
spec:
    url: https://developer-lostark.game.onstove.com/armories/characters/{characterName}/profiles
    method: GET
    result:
      json:
        expeditionLevel: first($.ExpeditionLevel)

---
apiVersion: queries.qouriers.io/v1
kind: APIQuery
metadata:
    name: search-gem-price
    namespace: qouriers
    labels:
      keys.qouriers.io/keyspace: lostark
spec:
    url: https://developer-lostark.game.onstove.com/auctions/items
    method: POST
    variables:
      level:
        type: int
        required: true
      gemtype:
        type: string
        required: true
    data: |
      {
        "Sort": "BUY_PRICE",
        "CategoryCode": 210000,
        "ItemName": "{level}레벨 {gemtype}",
        "PageNo": 0,
        "SortCondition": "ASC"
      }
    result:
      json:
        minPrice: first($.Items[:].AuctionInfo.BuyPrice)

---
apiVersion: queries.qouriers.io/v1
kind: APIQuery
metadata:
    name: search-stone-price
    namespace: qouriers
    labels:
      keys.qouriers.io/keyspace: lostark
spec:
    url: https://developer-lostark.game.onstove.com/auctions/items
    method: POST
    variables:
      stoneValue1:
        type: int
        required: true
      stoneValue2:
        type: int
        required: true
    data: |
      {
        "EtcOptions": 
        [
          {
            "FirstOption": 3,
            "SecondOption": "{stoneValue1}"
          },
          {
            "FirstOption": 3,
            "SecondOption": "{stoneValue2}"
          }
        ],
        "Sort": "BUY_PRICE",
        "CategoryCode": 30000,
        "ItemTier": null,
        "ItemGrade": "유물",
        "PageNo": 0,
        "SortCondition": "ASC"
      }
    result:
      json:
        prices: first($.Items[:].AuctionInfo.BuyPrice)
        options: first($.Items[:].Options.OptionName)